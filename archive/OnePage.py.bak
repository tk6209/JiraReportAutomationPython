# Download the dailyDashboard info
# Structure: Python (OnePage.py) → .bat → VBScript (script.vbs) → Excel (.xlsm)

import os
import glob
import time
from selenium import webdriver
from selenium.webdriver.common.by import By

# Get active Windows user
activeUser = os.getlogin()

# Set username and retrieve password from environment
username = activeUser
password = os.environ.get('cred_anyconn')
if not password:
    raise ValueError("Environment variable 'cred_anyconn' is not set.")

# File handling paths
download_dir = os.path.join("C:\\Users", activeUser, "Downloads")
temp_dir = os.path.join("C:\\Users", activeUser, "tempAutomation")

# Remove existing CSV files from Downloads
for f in glob.glob(os.path.join(download_dir, "*.csv")):
    os.remove(f)

# Configure Firefox profile for automatic download
profile = webdriver.FirefoxProfile()
profile.set_preference("browser.helperApps.neverAsk.saveToDisk", "application/csv,text/csv")
profile.set_preference("browser.download.manager.showWhenStarting", False)
profile.set_preference("browser.download.dir", temp_dir)
profile.set_preference("browser.download.folderList", 2)

# Start WebDriver
driver = webdriver.Firefox(firefox_profile=profile)

try:
    # Open JIRA CSV export page
    driver.set_page_load_timeout(20)
    driver.get("https://clientsupport.worldlinesweden.com/sr/jira.issueviews:searchrequest-csv-current-fields/11177/SearchRequest-11177.csv")

    # Perform login
    driver.find_element(By.ID, "login-form-username").send_keys(username)
    driver.find_element(By.ID, "login-form-password").send_keys(password)
    driver.find_element(By.ID, "login-form-submit").click()

    # Wait for download to complete
    time.sleep(5)

finally:
    driver.quit()

# Rename the downloaded CSV to raw.csv
csv_files = glob.glob(os.path.join(download_dir, "*.csv"))
if csv_files:
    os.rename(csv_files[0], os.path.join(download_dir, "raw.csv"))
else:
    raise FileNotFoundError("No CSV file found to rename.")

# Call the VBA macro via .bat
os.system("C:/scripts/OnePage/run.bat")

print("✔️ Report downloaded and macro executed successfully.")
exit()
